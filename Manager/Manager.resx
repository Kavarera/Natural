<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGSAAAAEAIAAoDQAAFgAAACgAAAAZAAAAQAAAAAEAIAAAAAAAgAwAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfX19AH9/
        fwp7e3sVd3d3FoODgw2GhoYghYWFFoWFhRqAgIAbgoKCF319fQx7e3sYfn5+CYWFhRSDg4MUgoKCGIaG
        hhx1dXUUSEhIAGpqagAAAAAAAAAAAAAAAAAAAAAAAAAAAHp6egB7e3sOeHh4HXFxcSF9fX0SeXl6LX19
        fSKBgYEhdnZ2Jnx8fB5ubm4WeHh4InZ2dg+BgYEYfX19G3t7eyOCgoIndHR0Gv///wB6enoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAsLDAAMC8zOikpLFguLS9hNDM2YywrLpIuLjCPLy8xUy4tMHYtLC5uLCsunTEx
        M3Y5ODpzOTg7LysqLYwtLC+YKCgqZS4tMFgYGRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSUpACkp
        LE8lJSiTKiksmjAvMrAtLC+PKCgqrTAwMpYxMDOFKyotnCUlJ3AqKy2cMC8yqzEwM4EsKy2gJyYqpiEh
        JIwmJyl5EBEVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYlKQApKCwvKCcqiSwsLncxMDM9LCsuhikp
        K3wvLjGYKikslyopLGAgHyI2KiosXS8uMXgwLzJiLSwufCgnKoUhISNxJycpexERFQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAcnN4AHN0eQB8fYEBMDU4AHRzdwEFBAcAMjE0HTAvMhklJCcAAAAAAM/P
        zwCqqqoAmpmZAH19fQEAAAIAICAiHiYlKDIREBMAAAAAAAAAAAAAAAAAxODTAPbolwDv6asE7uSfC+7j
        nw3w56EH9/bYAPbzywAAAAAA/v7yAP///wDx6KsI7uOhDvDknQn38LsC8+mlAP///wD488sA9u+9Afbw
        vgXz7bcL7+SiDO/opgTx4HoA5/ntAPDjlV7w4pF87+KPqPDhjrvv4Y6+7+KOs+/ij4/w4pJn8OKSXe/i
        kXHv4o+d8OGOuu/hjr/w4Y648OKPnfDikXHw4pJd8OKSZ+/ij43w4Y6z7+GOvu/hjr3v4o+p7+KPfe/j
        lGDv4pCs8OKOnu/ikG/w4o9K8OKNRe/ikFvv4Y+K7+GOrPDhjLLw4Y6n7+KQfu/ikVPv4o1F8OKPUO/i
        kHzv4o6l8OGMsvDhjqzv4o+M8OKQXO/ijUXv4o9K7+KRb/Dhj5zw4o+u8empCfHmog3w4pUk8OOUPfDj
        lULu4pQw7uWbFfHopgry6aQJ8OekC+/jlxzw45M28OOVQ+/jlDfu5Jgd8OeiCvLopAnx6KYJ7uWbFe7i
        ky/w45VB7+OUPe/jkyXv5qIO8OmkCe/jk6vw4Y688OGOyvDijsXw4o/E7+GOyO/ijsbw4o+z8OKRr+/i
        jrfv4Y7J8OGOx/Dij8Tw4o7G7+KOyvDijrfw4pCs8OKPse/ijsXv4Y7J8OKPxPDij8Xv4Y7L7+KOwO/j
        kq3w45Rm8OKRUe/jlCnx5JcT8+WZEfHkmB3w4pM+8OKRXfHikGfw4pJY7+OUMvDlnhfx6KMT8OWbFu/j
        lTDw45JW8eKQZ/HikV/v45I/8OSWHfLmmhLx5ZoU8OSWKu/jkVHw45RmAAAAAAAAAAAAAAAAAAAAANT/
        /wDu4ZEA7uKVGu7jlDnu4pcx8OOUQfDikW3v4Y6V7+KQo+/hj5bw4pFu7+KTQe7iljHv4pQ57+KUG+/h
        jQDt/vQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADt6KYA6e/EAu/hj5Pw4Yz28OGM7/Dh
        jPbw4Yv+8OGL//Dhi//w4Yv/8OGL/vDhjPbw4Y3v8OGM9+/ijpnt7LMD7+iiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7uOTAO3jlBrv4YzX8OGL//Dhi//w4Yv/8OGL//Dhi//w4Yv/8OGL//Dh
        i//w4Yv/8OGL//Dhi//w4Y3b7uSVHe7klQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/i
        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
</value>
  </data>
</root>